<UserControl x:Class="Kanstraction.Views.OperationsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:conv="clr-namespace:Kanstraction.Converters"
             xmlns:models="clr-namespace:Kanstraction.Entities"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             x:Name="Root"
             Background="{DynamicResource MaterialDesignPaper}">

    <UserControl.Resources>
        <conv:StatusToBrushConverter x:Key="StatusToBrush" />
        <conv:WorkStatusToStringConverter x:Key="StatusToString" />
        <conv:TotalCostConverter x:Key="TotalCostConverter"/>
        <conv:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
    </UserControl.Resources>

    <!-- MAIN: breadcrumb + three columns + bottom materials (each grid scrolls independently) -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- breadcrumb -->
            <RowDefinition Height="*"/>
            <!-- top: 3 columns -->
            <RowDefinition Height="6"/>
            <!-- horizontal splitter -->
            <RowDefinition Height="240"/>
            <!-- bottom: materials (initial height) -->
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.9*"/>
            <ColumnDefinition Width="6"/>
            <ColumnDefinition Width="0.9*"/>
            <ColumnDefinition Width="6"/>
            <ColumnDefinition Width="1.2*"/>
        </Grid.ColumnDefinitions>

        <!-- Breadcrumb strip -->
        <Border Grid.Row="0" Padding="8"
        Background="{DynamicResource MaterialDesignPaper}"
        BorderBrush="{DynamicResource MaterialDesignDivider}"
        BorderThickness="0,0,0,1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Left: breadcrumb text (unchanged binding) -->
                <TextBlock Text="{Binding Breadcrumb, RelativeSource={RelativeSource AncestorType=UserControl}}"
               VerticalAlignment="Center"
               FontWeight="SemiBold"/>

                <!-- Right: Resolve Payment (for the currently selected project) -->
                <Button Grid.Column="1"
            Click="ResolvePayment_Click"
            Margin="8,0,0,0"
            Padding="10,6"
            ToolTip="{DynamicResource OperationsView_ResolvePaymentTooltip}"
            Background="#3f51b5"
            Foreground="White"
            Style="{StaticResource MaterialDesignRaisedButton}">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconFontAwesome Kind="FileInvoiceDollarSolid" Width="14" Height="14" Margin="0,0,6,0"/>
                        <TextBlock Text="{DynamicResource OperationsView_ResolvePayment}"/>
                    </StackPanel>
                </Button>
            </Grid>
        </Border>

        <!-- BUILDINGS -->
        <Grid Grid.Row="1" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Border Grid.Row="0" Padding="6"
              Background="{DynamicResource MaterialDesignCardBackground}"
              BorderBrush="{DynamicResource MaterialDesignDivider}" BorderThickness="0,0,0,1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Title -->
                    <TextBlock Text="{DynamicResource OperationsView_Buildings}" FontWeight="SemiBold"
               VerticalAlignment="Center"/>

                    <!-- Add Building button (small, icon-only) -->
                    <Button Grid.Column="1"
            Click="AddBuilding_Click"
                            Background="#3f51b5"
            Style="{StaticResource TinyIconButton}"
            ToolTip="{DynamicResource OperationsView_AddBuildingTooltip}">
                        <iconPacks:PackIconFontAwesome Foreground="White" Kind="PlusSolid" Width="12" Height="12"/>
                    </Button>
                </Grid>
            </Border>

            <DataGrid Grid.Row="1" x:Name="BuildingsGrid" Margin="10"
                AutoGenerateColumns="False" IsReadOnly="True"
                HeadersVisibility="Column" GridLinesVisibility="None"
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                ScrollViewer.CanContentScroll="True"
                EnableRowVirtualization="True"
                SelectionChanged="BuildingsGrid_SelectionChanged"
                Style="{StaticResource MaterialDesignDataGrid}">
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="{DynamicResource OperationsView_Status}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border CornerRadius="10" Padding="6,2"
                        Background="{Binding Status, Converter={StaticResource StatusToBrush}}">
                                    <TextBlock Text="{Binding Status, Converter={StaticResource StatusToString}}" Foreground="White" FontWeight="SemiBold"/>
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn Header="{DynamicResource OperationsView_Code}" Binding="{Binding Code}"/>
                    <DataGridTextColumn Header="{DynamicResource OperationsView_Type}" Binding="{Binding TypeName}"/>
                    <DataGridTextColumn Header="{DynamicResource OperationsView_Percent}" Binding="{Binding ProgressPercent}"/>
                    <DataGridTextColumn Header="{DynamicResource OperationsView_CurrentStage}" Binding="{Binding CurrentStageName}"/>
                    <DataGridTemplateColumn Header="" Width="60">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button x:Name="BtnStop"
              Click="StopBuilding_Click"
              Style="{StaticResource TinyIconButton}"
              ToolTip="{DynamicResource OperationsView_StopBuildingTooltip}"
              Background="#fb8c00">
                                    <iconPacks:PackIconFontAwesome Kind="BanSolid" Width="12" Height="12" Foreground="White"/>
                                </Button>

                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static models:WorkStatus.Stopped}">
                                        <Setter TargetName="BtnStop" Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static models:WorkStatus.Finished}">
                                        <Setter TargetName="BtnStop" Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static models:WorkStatus.Paid}">
                                        <Setter TargetName="BtnStop" Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="" Width="60">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button x:Name="BtnDelete"
              Tag="{Binding Id}"
              Click="DeleteBuilding_Click"
              Style="{StaticResource TinyIconButton}"
              ToolTip="{DynamicResource OperationsView_DeleteBuildingTooltip}">
                                    <iconPacks:PackIconFontAwesome Kind="TrashCanRegular" Width="12" Height="12" Foreground="#e53935"/>
                                </Button>

                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding HasPaidItems}" Value="True">
                                        <Setter TargetName="BtnDelete" Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <!-- Vertical splitter between Buildings and Stages -->
        <GridSplitter Grid.Row="1" Grid.Column="1"
                  Width="6" HorizontalAlignment="Stretch"
                  Background="{DynamicResource MaterialDesignDivider}"
                  ResizeBehavior="PreviousAndNext" ShowsPreview="True"/>

        <!-- STAGES -->
        <Grid Grid.Row="1" Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Border Grid.Row="0" Padding="8"
        Background="{DynamicResource MaterialDesignCardBackground}"
        BorderBrush="{DynamicResource MaterialDesignDivider}" BorderThickness="0,0,0,1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

            <TextBlock Text="{DynamicResource OperationsView_Stages}" FontWeight="SemiBold" VerticalAlignment="Center"/>

            <Button Grid.Column="1"
            Click="AddStageToBuilding_Click"
            Style="{StaticResource TinyIconButton}"
            ToolTip="{DynamicResource OperationsView_AddStageTooltip}"
            Background="#3f51b5"
            Visibility="{Binding SelectedItem, ElementName=BuildingsGrid,
                                 Converter={StaticResource NullToVisibilityConverter}}">
                        <iconPacks:PackIconFontAwesome Kind="PlusSolid" Width="12" Height="12" Foreground="White"/>
                    </Button>
                </Grid>
            </Border>

            <DataGrid Grid.Row="1" x:Name="StagesGrid" Margin="10"
                AutoGenerateColumns="False" IsReadOnly="True"
                HeadersVisibility="Column" GridLinesVisibility="None"
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                ScrollViewer.CanContentScroll="True"
                EnableRowVirtualization="True"
                SelectionChanged="StagesGrid_SelectionChanged"
                Style="{StaticResource MaterialDesignDataGrid}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="{DynamicResource OperationsView_Stage}" Binding="{Binding Name}"/>
                    <DataGridTemplateColumn Header="{DynamicResource OperationsView_Status}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border CornerRadius="10" Padding="6,2"
                        Background="{Binding Status, Converter={StaticResource StatusToBrush}}">
                                    <TextBlock Text="{Binding Status, Converter={StaticResource StatusToString}}" Foreground="White" FontWeight="SemiBold"/>
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="{DynamicResource OperationsView_OngoingSubStage}" Binding="{Binding OngoingSubStageName}"/>
                    <DataGridTextColumn Header="{DynamicResource OperationsView_Percent}" Binding="{Binding ProgressPercent}"/>
                    <DataGridTemplateColumn Header="" Width="70">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Style="{StaticResource TinyIconButton}"
                                        Background="#3f51b5"
                                        Click="ChangeStageStatus_Click"
                                        ToolTip="Change status">
                                    <iconPacks:PackIconFontAwesome Kind="ArrowsRotateSolid" Width="12" Height="12" Foreground="White"/>
                                    <Button.ContextMenu>
                                        <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                            <MenuItem Tag="{x:Static models:WorkStatus.NotStarted}"
                                                      Header="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource StatusToString}}"
                                                      Click="StageStatusMenuItem_Click">
                                                <MenuItem.Style>
                                                    <Style TargetType="MenuItem">
                                                        <Setter Property="IsCheckable" Value="True"/>
                                                        <Setter Property="IsChecked" Value="False"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Status}" Value="{x:Static models:WorkStatus.NotStarted}">
                                                                <Setter Property="IsChecked" Value="True"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </MenuItem.Style>
                                            </MenuItem>
                                            <MenuItem Tag="{x:Static models:WorkStatus.Ongoing}"
                                                      Header="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource StatusToString}}"
                                                      Click="StageStatusMenuItem_Click">
                                                <MenuItem.Style>
                                                    <Style TargetType="MenuItem">
                                                        <Setter Property="IsCheckable" Value="True"/>
                                                        <Setter Property="IsChecked" Value="False"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Status}" Value="{x:Static models:WorkStatus.Ongoing}">
                                                                <Setter Property="IsChecked" Value="True"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </MenuItem.Style>
                                            </MenuItem>
                                            <MenuItem Tag="{x:Static models:WorkStatus.Finished}"
                                                      Header="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource StatusToString}}"
                                                      Click="StageStatusMenuItem_Click">
                                                <MenuItem.Style>
                                                    <Style TargetType="MenuItem">
                                                        <Setter Property="IsCheckable" Value="True"/>
                                                        <Setter Property="IsChecked" Value="False"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Status}" Value="{x:Static models:WorkStatus.Finished}">
                                                                <Setter Property="IsChecked" Value="True"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </MenuItem.Style>
                                            </MenuItem>
                                            <MenuItem Tag="{x:Static models:WorkStatus.Paid}"
                                                      Header="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource StatusToString}}"
                                                      Click="StageStatusMenuItem_Click">
                                                <MenuItem.Style>
                                                    <Style TargetType="MenuItem">
                                                        <Setter Property="IsCheckable" Value="True"/>
                                                        <Setter Property="IsChecked" Value="False"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Status}" Value="{x:Static models:WorkStatus.Paid}">
                                                                <Setter Property="IsChecked" Value="True"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </MenuItem.Style>
                                            </MenuItem>
                                            <MenuItem Tag="{x:Static models:WorkStatus.Stopped}"
                                                      Header="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource StatusToString}}"
                                                      Click="StageStatusMenuItem_Click">
                                                <MenuItem.Style>
                                                    <Style TargetType="MenuItem">
                                                        <Setter Property="IsCheckable" Value="True"/>
                                                        <Setter Property="IsChecked" Value="False"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Status}" Value="{x:Static models:WorkStatus.Stopped}">
                                                                <Setter Property="IsChecked" Value="True"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </MenuItem.Style>
                                            </MenuItem>
                                        </ContextMenu>
                                    </Button.ContextMenu>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="" Width="60">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Style="{StaticResource TinyIconButton}"
                                        Tag="{Binding Id}"
                                        Click="DeleteStage_Click"
                                        ToolTip="{DynamicResource OperationsView_DeleteStageTooltip}">
                                    <iconPacks:PackIconFontAwesome Kind="TrashCanRegular" Width="12" Height="12" Foreground="Red"/>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <!-- Vertical splitter between Stages and Sub-stages -->
        <GridSplitter Grid.Row="1" Grid.Column="3"
                  Width="6" HorizontalAlignment="Stretch"
                  Background="{DynamicResource MaterialDesignDivider}"
                  ResizeBehavior="PreviousAndNext" ShowsPreview="True"/>

        <!-- SUB-STAGES -->
        <Grid Grid.Row="1" Grid.Column="4">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Border Grid.Row="0" Padding="8"
        Background="{DynamicResource MaterialDesignCardBackground}"
        BorderBrush="{DynamicResource MaterialDesignDivider}" BorderThickness="0,0,0,1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

            <TextBlock Text="{DynamicResource OperationsView_SubStages}" FontWeight="SemiBold" VerticalAlignment="Center"/>

                    <Button Grid.Column="1"
            Click="AddSubStage_Click"
            Style="{StaticResource TinyIconButton}"
            ToolTip="{DynamicResource OperationsView_AddSubStageTooltip}"
            Background="#3f51b5"
            Visibility="{Binding SelectedItem, ElementName=StagesGrid,
                                 Converter={StaticResource NullToVisibilityConverter}}">
                        <iconPacks:PackIconFontAwesome Kind="PlusSolid" Width="12" Height="12" Foreground="White"/>
                    </Button>
                </Grid>
            </Border>

            <DataGrid Grid.Row="1" x:Name="SubStagesGrid" Margin="10"
                AutoGenerateColumns="False" IsReadOnly="False"
                HeadersVisibility="Column" GridLinesVisibility="None"
                CanUserAddRows="False"
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                ScrollViewer.CanContentScroll="True"
                EnableRowVirtualization="True"
                SelectionChanged="SubStagesGrid_SelectionChanged"
                CellEditEnding="SubStagesGrid_CellEditEnding"
                PreparingCellForEdit="SubStagesGrid_PreparingCellForEdit"
                Style="{StaticResource MaterialDesignDataGrid}">
                    <DataGrid.Columns>
                    <DataGridTextColumn IsReadOnly="True" Header="{DynamicResource OperationsView_Name}" Binding="{Binding Name}"/>
                    <DataGridTemplateColumn IsReadOnly="True" Header="{DynamicResource OperationsView_Status}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border CornerRadius="10" Padding="6,2"
                        Background="{Binding Status, Converter={StaticResource StatusToBrush}}">
                                    <TextBlock Text="{Binding Status, Converter={StaticResource StatusToString}}" Foreground="White" FontWeight="SemiBold"/>
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="{DynamicResource OperationsView_Labor}"  IsReadOnly="False"
                      Binding="{Binding LaborCost, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:0.##}}"/>

                    <DataGridTemplateColumn Header="">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">

                                    <!-- Start (default hidden; shown when NotStarted) -->
                                    <Button x:Name="BtnStart"
                Click="StartSubStage_Click"
                Style="{StaticResource TinyIconButton}"
                ToolTip="{DynamicResource OperationsView_StartSubStageTooltip}"
                Background="#43a047" Margin="2"
                Visibility="Collapsed">
                                        <iconPacks:PackIconFontAwesome Kind="PlaySolid" Width="12" Height="12" Foreground="White"/>
                                    </Button>

                                    <!-- Finish (default hidden; shown when Ongoing) -->
                                    <Button x:Name="BtnFinish"
                Click="FinishSubStage_Click"
                Style="{StaticResource TinyIconButton}"
                ToolTip="{DynamicResource OperationsView_FinishSubStageTooltip}"
                Background="#fb8c00" Margin="2"
                Visibility="Collapsed">
                                        <iconPacks:PackIconFontAwesome Kind="CheckSolid" Width="12" Height="12" Foreground="White"/>
                                    </Button>

                                    <!-- Reset to NotStarted (default hidden; shown when Ongoing) -->
                                    <Button x:Name="BtnReset"
                Click="ResetSubStage_Click"
                Style="{StaticResource TinyIconButton}"
                ToolTip="{DynamicResource OperationsView_ResetSubStageTooltip}"
                Background="#546e7a" Margin="2"
                Visibility="Collapsed">
                                        <iconPacks:PackIconFontAwesome Kind="RotateLeftSolid" Width="12" Height="12" Foreground="White"/>
                                    </Button>

                                </StackPanel>

                                <DataTemplate.Triggers>
                                    <!-- NotStarted => show Start -->
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static models:WorkStatus.NotStarted}">
                                        <Setter TargetName="BtnStart" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="BtnFinish" Property="Visibility" Value="Collapsed"/>
                                        <Setter TargetName="BtnReset" Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>

                                    <!-- Ongoing => show Finish + Reset -->
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static models:WorkStatus.Ongoing}">
                                        <Setter TargetName="BtnStart" Property="Visibility" Value="Collapsed"/>
                                        <Setter TargetName="BtnFinish" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="BtnReset" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>

                                    <!-- Finished / Paid / Stopped => hide all (defaults already collapsed) -->
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static models:WorkStatus.Finished}"/>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static models:WorkStatus.Paid}"/>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static models:WorkStatus.Stopped}"/>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="" Width="60">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Style="{StaticResource TinyIconButton}"
                                        Tag="{Binding Id}"
                                        Click="DeleteSubStageInstance_Click"
                                        ToolTip="{DynamicResource OperationsView_DeleteSubStageTooltip}">
                                    <iconPacks:PackIconFontAwesome Kind="TrashCanRegular" Width="12" Height="12" Foreground="Red"/>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <!-- Horizontal splitter -->
        <GridSplitter Grid.Row="2" Grid.ColumnSpan="5"
                  Height="6" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                  Background="{DynamicResource MaterialDesignDivider}"
                  ResizeDirection="Rows" ResizeBehavior="PreviousAndNext" ShowsPreview="True"/>

        <!-- MATERIALS -->
        <Grid Grid.Row="3" Grid.ColumnSpan="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Border Grid.Row="0" Padding="8"
        Background="{DynamicResource MaterialDesignCardBackground}"
        BorderBrush="{DynamicResource MaterialDesignDivider}" BorderThickness="0,0,0,1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="{DynamicResource OperationsView_Materials}" FontWeight="SemiBold" VerticalAlignment="Center"/>

                    <Button Grid.Column="1"
        Style="{StaticResource TinyIconButton}"
        ToolTip="{DynamicResource OperationsView_AddMaterialTooltip}"
        Background="#3f51b5"
        Click="AddMaterialToSubStage_Click"
        Visibility="{Binding SelectedItem, ElementName=SubStagesGrid,
                             Converter={StaticResource NullToVisibilityConverter}}">
                        <iconPacks:PackIconFontAwesome Kind="PlusSolid" Width="12" Height="12" Foreground="White"/>
                    </Button>
                </Grid>
            </Border>

            <DataGrid Grid.Row="1" x:Name="MaterialsGrid" Margin="10"
                AutoGenerateColumns="False" IsReadOnly="False"
                CanUserAddRows="False"
                HeadersVisibility="Column" GridLinesVisibility="None"
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                ScrollViewer.CanContentScroll="True"
                EnableRowVirtualization="True"
                Style="{StaticResource MaterialDesignDataGrid}"
                CellEditEnding="MaterialsGrid_CellEditEnding"
                PreparingCellForEdit="MaterialsGrid_PreparingCellForEdit">
                <DataGrid.Columns>
                    <DataGridTextColumn IsReadOnly="True" Header="{DynamicResource OperationsView_MaterialHeader}" Binding="{Binding Material.Name}"/>
                    <DataGridTextColumn IsReadOnly="True" Header="{DynamicResource OperationsView_Category}" Binding="{Binding Material.MaterialCategory.Name}" Width="160"/>
                    <DataGridTextColumn Header="{DynamicResource OperationsView_Qty}" Width="100" IsReadOnly="False"
                        Binding="{Binding Qty, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:0.##}}"/>
                    <DataGridTextColumn IsReadOnly="True" Header="{DynamicResource OperationsView_Unit}" Binding="{Binding Material.Unit}"/>
                    <DataGridTextColumn IsReadOnly="True" Header="{DynamicResource OperationsView_UsageDate}" Binding="{Binding UsageDate}"/>
                    <DataGridTextColumn IsReadOnly="True" Header="{DynamicResource OperationsView_UnitPrice}" Binding="{Binding DisplayUnitPrice}"/>
                    <DataGridTemplateColumn Header="{DynamicResource OperationsView_Total}" Width="120" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock HorizontalAlignment="Right">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource TotalCostConverter}" StringFormat="{}{0:0.##}">
                                            <Binding Path="Qty"/>
                                            <Binding Path="DisplayUnitPrice"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="" Width="60">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Style="{StaticResource TinyIconButton}"
                                        Tag="{Binding Id}"
                                        Click="DeleteMaterialUsage_Click"
                                        ToolTip="{DynamicResource OperationsView_DeleteMaterialTooltip}">
                                    <iconPacks:PackIconFontAwesome Kind="TrashCanRegular" Width="12" Height="12" Foreground="Red"/>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</UserControl>
